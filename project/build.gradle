plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    // Querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'com.page27'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'


    //spring dev tools
    compileOnly("org.springframework.boot:spring-boot-devtools")

    //query parameter log
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'

    //querydsl 추가
    implementation 'com.querydsl:querydsl-jpa'

    //spring security 추가
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //타임리프에도 스프링 시큐리티 통합 모듈을 사용하기 위해 의존성 추가
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

    //멀티 파일 업로드
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.3'

    // commons-fileupload
    implementation 'commons-io:commons-io:2.6'

    //웹 크롤링
    compile group: 'org.jsoup', name: 'jsoup', version: '1.11.3'

    //webp-io
    // https://mvnrepository.com/artifact/org.sejda.imageio/webp-imageio
    implementation group: 'org.sejda.imageio', name: 'webp-imageio', version: '0.1.1'

    //JUnit4 추가
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }

    //테스트 코드에 spring security 적용하기
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation("org.junit.vintage:junit-vintage-engine") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
    }

    //문자열 처리 라이브러리
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.8'


    // gson 라이브러리
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

}

test {
    useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝